<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>image classification on Shirin&#39;s playgRound</title>
    <link>https://shirinsplayground.netlify.app/tags/image-classification/</link>
    <description>Recent content in image classification on Shirin&#39;s playgRound</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://shirinsplayground.netlify.app/tags/image-classification/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Video &#43; code from workshop on Deep Learning with Keras and TensorFlow</title>
      <link>https://shirinsplayground.netlify.app/2020/10/keras_workshop_user20/</link>
      <pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.app/2020/10/keras_workshop_user20/</guid>
      <description>Workshop material Because this year’s UseR 2020 couldn’t happen as an in-person event, I have been giving my workshop on Deep Learning with Keras and TensorFlow as an online event on Thursday, 8th of October.
You can now find the full recording of the 2-hour session on YouTube and the notebooks with code on Gitlab.

 
If you have questions or would like to talk about this article (or something else data-related), you can now book 15-minute timeslots with me (it’s free - one slot available per weekday):</description>
    </item>
    
    <item>
      <title>Whose dream is this? When and how to use the Keras Functional API</title>
      <link>https://shirinsplayground.netlify.app/2020/09/keras_funct_api/</link>
      <pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.app/2020/09/keras_funct_api/</guid>
      <description>I have been working with Keras for a while now, and I’ve also been writing quite a few blogposts about it; the most recent one being an update to image classification using TF 2.0.
However, in my blogposts I have always been using Keras sequential models and never shown how to use the Functional API. The reason is that the Functional API is usually applied when building more complex models, like multi-input or multi-output models.</description>
    </item>
    
    <item>
      <title>Update with TF 2.0: Image classification with Keras and TensorFlow</title>
      <link>https://shirinsplayground.netlify.app/2020/09/keras_fruits_update/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.app/2020/09/keras_fruits_update/</guid>
      <description>Recently, I have been getting a few comments on my old article on image classification with Keras, saying that they are getting errors with the code. And I have also gotten a few questions about how to use a Keras model to predict on new images (of different size). Instead of replying to them all individually, I decided to write this updated version using recent Keras and TensorFlow versions (all package versions and system information can be found at the bottom of this article, as usual).</description>
    </item>
    
    <item>
      <title>Explaining Keras image classification models with lime</title>
      <link>https://shirinsplayground.netlify.app/2018/06/keras_fruits_lime/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.app/2018/06/keras_fruits_lime/</guid>
      <description>Last week I published a blog post about how easy it is to train image classification models with Keras.
What I did not show in that post was how to use the model for making predictions. This, I will do here. But predictions alone are boring, so I’m adding explanations for the predictions using the lime package.
I have already written a few blog posts (here, here and here) about LIME and have given talks (here and here) about it, too.</description>
    </item>
    
    <item>
      <title>It&#39;s that easy! Image classification with keras in roughly 100 lines of code.</title>
      <link>https://shirinsplayground.netlify.app/2018/06/keras_fruits/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.app/2018/06/keras_fruits/</guid>
      <description>I’ve been using keras and TensorFlow for a while now - and love its simplicity and straight-forward way to modeling. As part of the latest update to my Workshop about deep learning with R and keras I’ve added a new example analysis:
Building an image classifier to differentiate different types of fruits
And I was (again) suprised how fast and easy it was to build the model; it took not even half an hour and only around 100 lines of code (counting only the main code; for this post I added comments and line breaks to make it easier to read)!</description>
    </item>
    
  </channel>
</rss>
