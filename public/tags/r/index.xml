<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Shirin&#39;s playgRound</title>
    <link>https://shirinsplayground.netlify.com/tags/r/</link>
    <description>Recent content in R on Shirin&#39;s playgRound</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 27 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://shirinsplayground.netlify.com/tags/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Good, the Bad and the Ugly: how to visualize Machine Learning data</title>
      <link>https://shirinsplayground.netlify.com/2021/04/goodbadugly_ml/</link>
      <pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2021/04/goodbadugly_ml/</guid>
      <description>Below you’ll find the complete code and resources used to create the graphs in my talk The Good, the Bad and the Ugly: how to visualize Machine Learning data at this year’s Minds Mastering machines conference. You can find the German slides here:
 You can find Part 1: The Good, the Bad and the Ugly: how (not) to visualize data here.
If you have questions or would like to talk about this article (or something else data-related), you can now book 15-minute timeslots with me (it’s free - one slot available per weekday):</description>
    </item>
    
    <item>
      <title>Update to Code for case study - Customer Churn with Keras/TensorFlow and H2O</title>
      <link>https://shirinsplayground.netlify.com/2021/03/update_customer_churn/</link>
      <pubDate>Thu, 18 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2021/03/update_customer_churn/</guid>
      <description>This is an UPDATE to this old post with updated links &amp;amp; descriptions
This is code that accompanies a book chapter on customer churn that I have written for the German dpunkt Verlag. The book is in German, however.
The code you find below can be used to recreate all figures and analyses from this book chapter. Because the content is exclusively for the book, my descriptions around the code had to be minimal.</description>
    </item>
    
    <item>
      <title>k-Means 101: An introductory guide to k-Means clustering in R</title>
      <link>https://shirinsplayground.netlify.com/2021/03/kmeans_101/</link>
      <pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2021/03/kmeans_101/</guid>
      <description>Editor’s note: This is a guest post by Nathaniel Schmucker. He is the founder of The Analyst Code, a blog that provides tools to instill a love of data in individuals of all backgrounds and to empower aspiring analysts.
Introduction In this post, we will look at:
 What is a k-Means analysis? How does the k-Means algorithm work? How do we implement k-Means in R?</description>
    </item>
    
    <item>
      <title>The Good, the Bad and the Ugly: how (not) to visualize data</title>
      <link>https://shirinsplayground.netlify.com/2020/10/goodbadugly/</link>
      <pubDate>Tue, 20 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2020/10/goodbadugly/</guid>
      <description>Below you’ll find the complete code used to create the ggplot2 graphs in my talk The Good, the Bad and the Ugly: how (not) to visualize data at this year’s data2day conference. You can find the German slides here:
 You can also find a German blog article accompanying my talk on codecentric’s blog.
If you have questions or would like to talk about this article (or something else data-related), you can now book 15-minute timeslots with me (it’s free - one slot available per weekday):</description>
    </item>
    
    <item>
      <title>Video &#43; code from workshop on Deep Learning with Keras and TensorFlow</title>
      <link>https://shirinsplayground.netlify.com/2020/10/keras_workshop_user20/</link>
      <pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2020/10/keras_workshop_user20/</guid>
      <description>Workshop material Because this year’s UseR 2020 couldn’t happen as an in-person event, I have been giving my workshop on Deep Learning with Keras and TensorFlow as an online event on Thursday, 8th of October.
You can now find the full recording of the 2-hour session on YouTube and the notebooks with code on Gitlab.

 
If you have questions or would like to talk about this article (or something else data-related), you can now book 15-minute timeslots with me (it’s free - one slot available per weekday):</description>
    </item>
    
    <item>
      <title>Whose dream is this? When and how to use the Keras Functional API</title>
      <link>https://shirinsplayground.netlify.com/2020/09/keras_funct_api/</link>
      <pubDate>Sat, 19 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2020/09/keras_funct_api/</guid>
      <description>I have been working with Keras for a while now, and I’ve also been writing quite a few blogposts about it; the most recent one being an update to image classification using TF 2.0.
However, in my blogposts I have always been using Keras sequential models and never shown how to use the Functional API. The reason is that the Functional API is usually applied when building more complex models, like multi-input or multi-output models.</description>
    </item>
    
    <item>
      <title>Update with TF 2.0: Image classification with Keras and TensorFlow</title>
      <link>https://shirinsplayground.netlify.com/2020/09/keras_fruits_update/</link>
      <pubDate>Sun, 13 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2020/09/keras_fruits_update/</guid>
      <description>Recently, I have been getting a few comments on my old article on image classification with Keras, saying that they are getting errors with the code. And I have also gotten a few questions about how to use a Keras model to predict on new images (of different size). Instead of replying to them all individually, I decided to write this updated version using recent Keras and TensorFlow versions (all package versions and system information can be found at the bottom of this article, as usual).</description>
    </item>
    
    <item>
      <title>Baby Weight Shiny app</title>
      <link>https://shirinsplayground.netlify.com/2020/09/baby_weight_app/</link>
      <pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2020/09/baby_weight_app/</guid>
      <description>Alright, this is it: I am officially back! :-D
I have not written any blogposts for over a year. Last year, I had the cutest baby boy and ever since then, I did not get around to doing much coding. One of the reasons was that, unfortunately, we did not have the easiest of starts with the little one. Feeding problems led to weight gain problems, so we had to weigh him regularly.</description>
    </item>
    
    <item>
      <title>Before you take my DataCamp course please consider this info</title>
      <link>https://shirinsplayground.netlify.com/2019/04/consider_data_camp/</link>
      <pubDate>Sun, 21 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2019/04/consider_data_camp/</guid>
      <description>Today, I am finally getting around to writing this very sad blog post: Before you take my DataCamp course please consider the following information about the sexual harassment scandal surrounding DataCamp!
UPDATE from April 26th: Yesterday, DataCamp’s CEO Jonathan Cornelissen issued an apology statement and the DataCamp Board of Directors wrote an update about the situation and next steps (albeit somewhat vague) they are planning to take in order to address the situation.</description>
    </item>
    
    <item>
      <title>Book review: Beyond Spreadsheets with R</title>
      <link>https://shirinsplayground.netlify.com/2019/01/review_beyond_spreadsheets_with_r/</link>
      <pubDate>Thu, 31 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2019/01/review_beyond_spreadsheets_with_r/</guid>
      <description>Disclaimer: Manning publications gave me the ebook version of Beyond Spreadsheets with R - A beginner’s guide to R and RStudio by Dr. Jonathan Carroll free of charge.
 Beyond Spreadsheets with R shows you how to take raw data and transform it for use in computations, tables, graphs, and more. You’ll build on simple programming techniques like loops and conditionals to create your own custom functions. You’ll come away with a toolkit of strategies for analyzing and visualizing data of all sorts using R and RStudio.</description>
    </item>
    
    <item>
      <title>Code for case study - Customer Churn with Keras/TensorFlow and H2O</title>
      <link>https://shirinsplayground.netlify.com/2018/12/customer_churn_code/</link>
      <pubDate>Wed, 12 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2018/12/customer_churn_code/</guid>
      <description>This is code that accompanies a book chapter on customer churn that I have written for the German dpunkt Verlag. The book is in German and will probably appear in February: https://www.dpunkt.de/buecher/13208/9783864906107-data-science.html.
The code you find below can be used to recreate all figures and analyses from this book chapter. Because the content is exclusively for the book, my descriptions around the code had to be minimal. But I’m sure, you can get the gist, even without the book.</description>
    </item>
    
    <item>
      <title>Image clustering with Keras and k-Means</title>
      <link>https://shirinsplayground.netlify.com/2018/10/keras_fruits_cluster/</link>
      <pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2018/10/keras_fruits_cluster/</guid>
      <description>A while ago, I wrote two blogposts about image classification with Keras and about how to use your own models or pretrained models for predictions and using LIME to explain to predictions.
Recently, I came across this blogpost on using Keras to extract learned features from models and use those to cluster images. It is written in Python, though - so I adapted the code to R. You find the results below.</description>
    </item>
    
    <item>
      <title>Addendum: Text-to-Speech with the googleLanguageR package</title>
      <link>https://shirinsplayground.netlify.com/2018/06/googlelanguager/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2018/06/googlelanguager/</guid>
      <description>After posting my short blog post about Text-to-speech with R, I got two very useful tips. One was to use the googleLanguageR package, which uses the Google Cloud Text-to-Speech API.
And indeed, it was very easy to use and the resulting audio sounded much better than what I tried before!
Here’s a short example of how to use the package for TTS:
Set up Google Cloud and authentification You first need to set up a Google Cloud Account and provide credit card information (the first year is free to use, though).</description>
    </item>
    
    <item>
      <title>Code for Workshop: Introduction to Machine Learning with R</title>
      <link>https://shirinsplayground.netlify.com/2018/06/intro_to_ml_workshop_heidelberg/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2018/06/intro_to_ml_workshop_heidelberg/</guid>
      <description>These are the slides from my workshop: Introduction to Machine Learning with R which I gave at the University of Heidelberg, Germany on June 28th 2018. The entire code accompanying the workshop can be found below the video.
The workshop covered the basics of machine learning. With an example dataset I went through a standard machine learning workflow in R with the packages caret and h2o:
 reading in data exploratory data analysis missingness feature engineering training and test split model training with Random Forests, Gradient Boosting, Neural Nets, etc.</description>
    </item>
    
    <item>
      <title>Text-to-speech with R</title>
      <link>https://shirinsplayground.netlify.com/2018/06/text_to_speech_r/</link>
      <pubDate>Wed, 27 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2018/06/text_to_speech_r/</guid>
      <description>Computers started talking to us! They do this with so called Text-to-Speech (TTS) systems. With neural nets, deep learning and lots of training data, these systems have gotten a whole lot better in recent years. In some cases, they are so good that you can’t distinguish between human and machine voice.
In one of our recent codecentric.AI videos, we compared different Text-to-Speech systems (the video is in German, though - but the text snippets and their voice recordings we show in the video are a mix of German and English).</description>
    </item>
    
    <item>
      <title>Explaining Keras image classification models with lime</title>
      <link>https://shirinsplayground.netlify.com/2018/06/keras_fruits_lime/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2018/06/keras_fruits_lime/</guid>
      <description>Last week I published a blog post about how easy it is to train image classification models with Keras.
What I did not show in that post was how to use the model for making predictions. This, I will do here. But predictions alone are boring, so I’m adding explanations for the predictions using the lime package.
I have already written a few blog posts (here, here and here) about LIME and have given talks (here and here) about it, too.</description>
    </item>
    
    <item>
      <title>It&#39;s that easy! Image classification with keras in roughly 100 lines of code.</title>
      <link>https://shirinsplayground.netlify.com/2018/06/keras_fruits/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2018/06/keras_fruits/</guid>
      <description>I’ve been using keras and TensorFlow for a while now - and love its simplicity and straight-forward way to modeling. As part of the latest update to my Workshop about deep learning with R and keras I’ve added a new example analysis:
Building an image classifier to differentiate different types of fruits
And I was (again) suprised how fast and easy it was to build the model; it took not even half an hour and only around 100 lines of code (counting only the main code; for this post I added comments and line breaks to make it easier to read)!</description>
    </item>
    
    <item>
      <title>rOpenSci unconference 2018 &#43; introduction to TensorFlow Probability &amp; the &#39;greta&#39; package</title>
      <link>https://shirinsplayground.netlify.com/2018/05/ropensci_unconf18/</link>
      <pubDate>Wed, 30 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2018/05/ropensci_unconf18/</guid>
      <description>On May 21st and 22nd, I had the honor of having been chosen to attend the rOpenSci unconference 2018 in Seattle. It was a great event and I got to meet many amazing people!
rOpenSci rOpenSci is a non-profit organisation that maintains a number of widely used R packages and is very active in promoting a community spirit around the R-world. Their core values are to have open and reproducible research, shared data and easy-to-use tools and to make all this accessible to a large number of people.</description>
    </item>
    
    <item>
      <title>Comparing dependencies of popular machine learning packages with `pkgnet`</title>
      <link>https://shirinsplayground.netlify.com/2018/04/pkgnet/</link>
      <pubDate>Mon, 30 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2018/04/pkgnet/</guid>
      <description>When looking through the CRAN list of packages, I stumbled upon this little gem:
 pkgnet is an R library designed for the analysis of R libraries! The goal of the package is to build a graph representation of a package and its dependencies.
 And I thought it would be fun to play around with it. The little analysis I ended up doing was to compare dependencies of popular machine learning packages.</description>
    </item>
    
    <item>
      <title>Update: Can we predict flu outcome with Machine Learning in R?</title>
      <link>https://shirinsplayground.netlify.com/2018/04/flu_prediction/</link>
      <pubDate>Sun, 22 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2018/04/flu_prediction/</guid>
      <description>Since I migrated my blog from Github Pages to blogdown and Netlify, I wanted to start migrating (most of) my old posts too - and use that opportunity to update them and make sure the code still works.
Here I am updating my very first machine learning post from 27 Nov 2016: Can we predict flu deaths with Machine Learning and R?. Changes are marked as bold comments.
The main changes I made are:</description>
    </item>
    
    <item>
      <title>HH Data Science Meetup slides: Explaining complex machine learning models with LIME</title>
      <link>https://shirinsplayground.netlify.com/2018/04/hh_datascience_meetup_2018_slides/</link>
      <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2018/04/hh_datascience_meetup_2018_slides/</guid>
      <description>On April 12th, 2018 I gave a talk about Explaining complex machine learning models with LIME at the Hamburg Data Science Meetup - so if you’re intersted: the slides can be found here: https://www.slideshare.net/ShirinGlander/hh-data-science-meetup-explaining-complex-machine-learning-models-with-lime-94218890
 Traditional machine learning workflows focus heavily on model training and optimization; the best model is usually chosen via performance measures like accuracy or error and we tend to assume that a model is good enough for deployment if it passes certain thresholds of these performance criteria.</description>
    </item>
    
    <item>
      <title>Meetup slides: Introducing Deep Learning with Keras</title>
      <link>https://shirinsplayground.netlify.com/2018/04/ruhrpy_meetup_2018_slides/</link>
      <pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2018/04/ruhrpy_meetup_2018_slides/</guid>
      <description>On April 4th, 2018 I gave a talk about Deep Learning with Keras at the Ruhr.Py Meetup in Essen, Germany. The talk was not specific to Python, though - so if you’re intersted: the slides can be found here: https://www.slideshare.net/ShirinGlander/ruhrpy-introducing-deep-learning-with-keras-and-python
  Ruhr.PY - Introducing Deep Learning with Keras and Python  von Shirin Glander  There is also a video recording of my talk, which you can see here: https://youtu.</description>
    </item>
    
    <item>
      <title>My upcoming meetup talks about Deep Learning with Keras and explaining complex Machine Learning Models with LIME</title>
      <link>https://shirinsplayground.netlify.com/2018/03/meetup_talk_ruhrpy_april_18/</link>
      <pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2018/03/meetup_talk_ruhrpy_april_18/</guid>
      <description>I’ll be talking about Deep Learning with Keras in R and Python at the following upcoming meetup:
 Ruhr.Py 2018 on Wednesday, April 4th   Introducing Deep Learning with Keras and Python Keras is a high-level API written in Python for building and prototyping neural networks. It can be used on top of TensorFlow, Theano or CNTK. In this talk we build, train and visualize a Model using Python and Keras - all interactive with Jupyter Notebooks!</description>
    </item>
    
    <item>
      <title>Another Game of Thrones network analysis - this time with tidygraph and ggraph</title>
      <link>https://shirinsplayground.netlify.com/2018/03/got_network/</link>
      <pubDate>Sun, 04 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://shirinsplayground.netlify.com/2018/03/got_network/</guid>
      <description>A while back, I did an analysis of the family network of major characters from the A Song of Ice and Fire books and the Game of Thrones TV show. In that analysis I found out that House Stark (specifically Ned and Sansa) and House Lannister (especially Tyrion) are the most important family connections in Game of Thrones; they also connect many of the story lines and are central parts of the narrative.</description>
    </item>
    
  </channel>
</rss>
